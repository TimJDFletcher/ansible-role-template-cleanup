---
# tasks file for ansible-role-template-cleanup
- name: Flush handlers before we start
  meta: flush_handlers

- name: Install aptitude
  apt:
    name: aptitude
    state: present

- name: Update all packages
  apt:
    update_cache: true
    cache_valid_time: 3600
    upgrade: full
    autoremove: true
  async: 300
  poll: 5
  
- name: Copy over systemd units
  copy:
    src: "{{ item }}.service"
    dest: "/etc/systemd/system/{{ item }}.service"
    owner: root
    group: root
    mode: 0644
  with_items:
    - firstboot
    - ssh-keygen

- name: Enable systemd services
  systemd:
    name: "{{ item }}"
    enabled: true
  with_items:
    - firstboot
    - ssh-keygen

- name: Copy over firstboot wrapper script
  copy:
    src: firstboot.sh
    dest: /sbin/firstboot
    mode: 0755
    owner: root
    group: root

- name: Create /etc/firstboot.d
  file:
    path: /etc/firstboot.d
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Copy over ssh key reset script
  copy:
    src: ssh-key-clean.sh
    dest: /etc/firstboot.d/10-ssh-key-clean
    mode: 0755
    owner: root
    group: root

- name: Stop rsyslog to release log files
  systemd:
    name: "{{ item }}"
    state: stopped
  with_items:
    - rsyslog
    - syslog.socket
    
- name: clear kerberos and sss caches
  command: "{{ item }}"
  with_items:
    - kdestroy -A
    - sss_cache -E
  
- name: Find files for deleting
  find:
    paths: "{{ template_cleanup.dirs_to_clean }}"
    hidden: True
    recurse: True
    file_type: file
  register: template_cleanup_delete_files

- name: Delete udev rules files
  file:
    state: absent
    path: "/etc/udev/rules.d/70-persistent-{{ item }}.rules"
  with_items:
    - net
    - cd

- name: Delete machine-id file this enables the firstboot service
  file:
    path: /etc/machine-id
    state: absent

- name: reset logrotate status
  file:
    path: /var/lib/logrotate.status
    state: absent
    
- name: Delete gecos backup files
  file:
    state: absent
    path: "/etc/{{ item }}-"
  with_items:
    - group
    - gshadow
    - passwd
    - shadow
    - subgid
    - subuid

- name: Remove collected files 
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ template_cleanup_delete_files.files }}"

- name: Create log files
  file:
    state: touch
    path: "{{ item.path }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode}}"
  with_items: "{{ template_cleanup.log_files }}"

- name: Clear out /home
  file:
    state: "{{ item }}"
    path: /home
    owner: root
    group: root
    mode: '0755'
  with_items:
    - absent
    - directory
  when: template_cleanup.clear_home

- name: Call fstrim on all filesystems
  command: fstrim "{{ item.mount }}"
  with_items: "{{ ansible_mounts }}"
  when: 
    - template_cleanup.fstrim

